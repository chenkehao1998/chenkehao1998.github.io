(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{808:function(v,_,s){"use strict";s.r(_);var e=s(3),t=Object(e.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p",[_("strong",[v._v("1、信号量")])]),v._v(" "),_("p",[v._v("用于进程间传递信号的一个整数值。在信号量上只有三种操作可以进行：初始化，P操作和V操作，这三种操作都是原子操作。")]),v._v(" "),_("p",[_("strong",[v._v("P操作(递减操作)可以用于阻塞一个进程，V操作(增加操作)可以用于解除阻塞一个进程。")])]),v._v(" "),_("p",[v._v("基本原理是两个或多个进程可以通过简单的信号进行合作，一个进程可以被迫在某一位置停止，直到它接收到一个特定的信号。该信号即为信号量s。")]),v._v(" "),_("p",[v._v("为通过信号量s传送信号，进程可执行原语semSignal(s);为通过信号量s接收信号，进程可执行原语semWait(s);如果相应的信号仍然没有发送，则进程会被阻塞，直到发送完为止。")]),v._v(" "),_("p",[_("strong",[v._v("可把信号量视为一个具有整数值的变量，在它之上定义三个操作：")])]),v._v(" "),_("ul",[_("li",[v._v("一个信号量可以初始化为非负数")]),v._v(" "),_("li",[v._v("semWait操作使信号量s减1.若值为负数，则执行semWait的进程被阻塞。否则进程继续执行。")]),v._v(" "),_("li",[v._v("semSignal操作使信号量加1，若值大于或等于零，则被semWait操作阻塞的进程被解除阻塞。")])]),v._v(" "),_("p",[_("strong",[v._v("2、管程")])]),v._v(" "),_("p",[v._v("管程是由一个或多个过程、一个初始化序列和局部数据组成的软件模块，"),_("strong",[v._v("其主要特点如下：")])]),v._v(" "),_("ul",[_("li",[v._v("局部数据变量只能被管程的过程访问，任何外部过程都不能访问。")]),v._v(" "),_("li",[v._v("一个进程通过调用管程的一个过程进入管程。")]),v._v(" "),_("li",[v._v("在任何时候，只能有一个进程在管程中执行，调用管程的任何其他进程都被阻塞，以等待管程可用。")])]),v._v(" "),_("p",[v._v("管程通过使用条件变量提供对同步的支持，这些条件变量包含在管程中，并且只有在管程中才能被访问。有两个函数可以操作条件变量：")]),v._v(" "),_("ul",[_("li",[v._v("cwait(c)：调用进程的执行在条件c上阻塞，管程现在可被另一个进程使用。")]),v._v(" "),_("li",[v._v("csignal(c)：恢复执行在cwait之后因为某些条件而阻塞的进程。如果有多个这样的进程，选择其中一个；如果没有这样的进程，什么以不做。")])]),v._v(" "),_("p",[_("strong",[v._v("3、消息传递")])]),v._v(" "),_("p",[_("strong",[v._v("消息传递的实际功能以一对原语的形式提供：")])]),v._v(" "),_("ul",[_("li",[v._v("send(destination,message)")]),v._v(" "),_("li",[v._v("receive(source,message)")])]),v._v(" "),_("p",[v._v("这是进程间进程消息传递所需要的最小操作集。")]),v._v(" "),_("p",[v._v("一个进程以消息的形式给另一个指定的目标进程发送消息；")]),v._v(" "),_("p",[v._v("进程通过执行receive原语接收消息，receive原语中指明发送消息的源进程和消息。")])])}),[],!1,null,null,null);_.default=t.exports}}]);