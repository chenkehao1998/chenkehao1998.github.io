(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{608:function(e,t,a){e.exports=a.p+"assets/img/5ad75ecdfc10e7f5de908aa2edbe3e21.45ef07e6.png"},609:function(e,t,a){e.exports=a.p+"assets/img/c5ca2bdee6945ac0b7e8bfb210d90183.73fe947a.png"},610:function(e,t,a){e.exports=a.p+"assets/img/4c6523ac3986a322b78d85beb32c5bf4.767c95f8.png"},611:function(e,t,a){e.exports=a.p+"assets/img/854ddec7768abb6c7f097871a2f65788.5bf66408.png"},918:function(e,t,a){"use strict";a.r(t);var s=a(3),r=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("redis主从数据同步过程 ： "),t("RouterLink",{attrs:{to:"/软件使用/redis/redis 主从架构原理.html"}},[e._v("redis 主从架构原理")])],1),e._v(" "),t("p",[e._v("sentinel英文的意思是哨兵，主要是用于检测主从架构的运行情况，如果master服务挂掉了会重新选取一个slave变成master")]),e._v(" "),t("p",[e._v("Sentinel分为leader和普通的Sentinel\n"),t("img",{attrs:{src:a(608),alt:"5ad75ecdfc10e7f5de908aa2edbe3e21.png"}})]),e._v(" "),t("h1",{attrs:{id:"redis-node节点高可用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-node节点高可用"}},[e._v("#")]),e._v(" redis node节点高可用")]),e._v(" "),t("p",[e._v("每个Sentinel以每秒钟—次的频率向它所知的Master，Slave以及其他 Sentinel 实例发送一个PING命令。")]),e._v(" "),t("h2",{attrs:{id:"下线"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下线"}},[e._v("#")]),e._v(" 下线")]),e._v(" "),t("p",[t("strong",[e._v("主观下线")]),e._v("：如果一个实例(instance)距离最后—次有效回复PING命令的时间超过own-after-milliseconds选项所指定的值，则这个实例会被Sentinel标记为主观下线。")]),e._v(" "),t("p",[t("strong",[e._v("客观下线")]),e._v("：当有足够数量的Sentinel(大于等于配置文件指定的值)在指定的时间范围内确认Master的确进入了主观下线状态，贝则Master会被标记为客观下线。")]),e._v(" "),t("h2",{attrs:{id:"master节点挂掉-主从切换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#master节点挂掉-主从切换"}},[e._v("#")]),e._v(" master节点挂掉，主从切换")]),e._v(" "),t("p",[t("img",{attrs:{src:a(609),alt:"c5ca2bdee6945ac0b7e8bfb210d90183.png"}})]),e._v(" "),t("h3",{attrs:{id:"选取条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选取条件"}},[e._v("#")]),e._v(" 选取条件")]),e._v(" "),t("p",[e._v("sentinel从slave选出新的master条件:")]),e._v(" "),t("ol",[t("li",[e._v("剔除主观下线、已断线、或者最后—次回复PING命令的时间大于五秒钟的Slave")]),e._v(" "),t("li",[e._v("剔除与失效主服务器连接断开的时长超过down-after 选项指定的时长十倍的Slave")]),e._v(" "),t("li",[e._v("按同步数据的偏移量选出数据最完整的Slave")]),e._v(" "),t("li",[e._v("如果偏移量相同，选中ID最小的Slave")])]),e._v(" "),t("h3",{attrs:{id:"切换过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#切换过程"}},[e._v("#")]),e._v(" 切换过程")]),e._v(" "),t("p",[t("img",{attrs:{src:a(610),alt:"4c6523ac3986a322b78d85beb32c5bf4.png"}})]),e._v(" "),t("ol",[t("li",[e._v("选中的从服务器发送"),t("code",[e._v("LAVEOF NO ONE")]),e._v("令，让它转变为主服务器。")]),e._v(" "),t("li",[e._v("发布与订阅功能，将更新后的配置传播给所有其他Sentinel ，其他Sentinel 对它们自己的配置进行更新。")]),e._v(" "),t("li",[e._v("向所有Slave下达"),t("code",[e._v("SLAVEOF")]),e._v("令，指向新的主")]),e._v(" "),t("li",[e._v("redis-slave向master重新建立连接，重放rdb保持数据同步")]),e._v(" "),t("li",[e._v("在上述转移过程中，伴随着Redis本地配置文件的自动重写，这样即便是实例重启配置也不会丢失")]),e._v(" "),t("li",[e._v("原有的master在恢复后降级为slave与新master全量同步")])]),e._v(" "),t("h1",{attrs:{id:"redis-sentinel节点高可用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-sentinel节点高可用"}},[e._v("#")]),e._v(" redis sentinel节点高可用")]),e._v(" "),t("p",[t("img",{attrs:{src:a(611),alt:"854ddec7768abb6c7f097871a2f65788.png"}}),e._v("\nsentinel之间是怎么感知的，怎么知道其他sentinel？\nsentinel和redis-master之间会存储数据")]),e._v(" "),t("ol",[t("li",[e._v("sentinel自动故障迁移使用raft算法 "),t("RouterLink",{attrs:{to:"/软件使用/redis/Raft选举算法.html"}},[e._v("Raft选举算法")]),e._v(" 来选举领头(leader)sentinel")],1),e._v(" "),t("li",[e._v("超过半数投票选出leader, sentinel Leader用于下达故障转移的指令")]),e._v(" "),t("li",[e._v("如果某个Leader挂了，则使用Raft从剩余的Sentinel中选出leader")])]),e._v(" "),t("blockquote",[t("p",[e._v("参考：")]),e._v(" "),t("ol",[t("li",[e._v("https://www.bilibili.com/video/BV1jM4y1V79K")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);