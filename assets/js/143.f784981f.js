(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{765:function(n,e,s){"use strict";s.r(e);var a=s(3),i=Object(a.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("p",[n._v("使用"),e("code",[n._v("ReentrantLock")]),n._v("比直接使用"),e("code",[n._v("synchronized")]),n._v("更安全，可以替代"),e("code",[n._v("synchronized")]),n._v("进行线程同步。")]),n._v(" "),e("p",[n._v("但是，"),e("code",[n._v("synchronized")]),n._v("可以配合"),e("code",[n._v("wait")]),n._v("和"),e("code",[n._v("notify")]),n._v("实现线程在条件不满足时等待，条件满足时唤醒，用"),e("code",[n._v("ReentrantLock")]),n._v("我们怎么编写"),e("code",[n._v("wait")]),n._v("和"),e("code",[n._v("notify")]),n._v("的功能呢？")]),n._v(" "),e("p",[n._v("答案是使用"),e("code",[n._v("Condition")]),n._v("对象来实现"),e("code",[n._v("wait")]),n._v("和"),e("code",[n._v("notify")]),n._v("的功能。")]),n._v(" "),e("p",[n._v("我们仍然以"),e("code",[n._v("TaskQueue")]),n._v("为例，把前面用"),e("code",[n._v("synchronized")]),n._v("实现的功能通过"),e("code",[n._v("ReentrantLock")]),n._v("和"),e("code",[n._v("Condition")]),n._v("来实现：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("class TaskQueue {\n    private final Lock lock = new ReentrantLock();\n    private final Condition condition = lock.newCondition();\n    private Queue<String> queue = new LinkedList<>();\n\n    public void addTask(String s) {\n        lock.lock();\n        try {\n            queue.add(s);\n            condition.signalAll();\n        } finally {\n            lock.unlock();\n        }\n    }\n\n    public String getTask() {\n        lock.lock();\n        try {\n            while (queue.isEmpty()) {\n                condition.await();\n            }\n            return queue.remove();\n        } finally {\n            lock.unlock();\n        }\n    }\n} \n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br")])]),e("p",[n._v("可见，使用"),e("code",[n._v("Condition")]),n._v("时，引用的"),e("code",[n._v("Condition")]),n._v("对象必须从"),e("code",[n._v("Lock")]),n._v("实例的"),e("code",[n._v("newCondition()")]),n._v("返回，这样才能获得一个绑定了"),e("code",[n._v("Lock")]),n._v("实例的"),e("code",[n._v("Condition")]),n._v("实例。")]),n._v(" "),e("p",[e("code",[n._v("Condition")]),n._v("提供的"),e("code",[n._v("await()")]),n._v("、"),e("code",[n._v("signal()")]),n._v("、"),e("code",[n._v("signalAll()")]),n._v("原理和"),e("code",[n._v("synchronized")]),n._v("锁对象的"),e("code",[n._v("wait()")]),n._v("、"),e("code",[n._v("notify()")]),n._v("、"),e("code",[n._v("notifyAll()")]),n._v("是一致的，并且其行为也是一样的：")]),n._v(" "),e("ul",[e("li",[e("p",[e("code",[n._v("await()")]),n._v("会释放当前锁，进入等待状态；")])]),n._v(" "),e("li",[e("p",[e("code",[n._v("signal()")]),n._v("会唤醒某个等待线程；")])]),n._v(" "),e("li",[e("p",[e("code",[n._v("signalAll()")]),n._v("会唤醒所有等待线程；")])]),n._v(" "),e("li",[e("p",[n._v("唤醒线程从"),e("code",[n._v("await()")]),n._v("返回后需要重新获得锁。")])])]),n._v(" "),e("p",[n._v("此外，和"),e("code",[n._v("tryLock()")]),n._v("类似，"),e("code",[n._v("await()")]),n._v("可以在等待指定时间后，如果还没有被其他线程通过"),e("code",[n._v("signal()")]),n._v("或"),e("code",[n._v("signalAll()")]),n._v("唤醒，可以自己醒来：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("if (condition.await(1, TimeUnit.SECOND)) {\n    // 被其他线程唤醒\n} else {\n    // 指定时间内没有被其他线程唤醒\n} \n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br")])]),e("p",[n._v("可见，使用"),e("code",[n._v("Condition")]),n._v("配合"),e("code",[n._v("Lock")]),n._v("，我们可以实现更灵活的线程同步。")]),n._v(" "),e("h4",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[n._v("#")]),n._v(" 小结")]),n._v(" "),e("p",[e("code",[n._v("Condition")]),n._v("可以替代"),e("code",[n._v("wait")]),n._v("和"),e("code",[n._v("notify")]),n._v("；")]),n._v(" "),e("p",[e("code",[n._v("Condition")]),n._v("对象必须从"),e("code",[n._v("Lock")]),n._v("对象获取。")])])}),[],!1,null,null,null);e.default=i.exports}}]);