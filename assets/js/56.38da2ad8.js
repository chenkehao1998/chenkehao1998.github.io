(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{693:function(a,t,e){a.exports=e.p+"assets/img/9a090b0f18389168102645528081de13.f7441f06.png"},694:function(a,t,e){a.exports=e.p+"assets/img/e435f695f403acc324ad6e2c68b67efc.b8d2e14f.png"},695:function(a,t,e){a.exports=e.p+"assets/img/5303a73d300a7a0fa8b77aae578b3f83.2684c4cc.png"},988:function(a,t,e){"use strict";e.r(t);var s=e(3),r=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"_1-rabbitmq高可用性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-rabbitmq高可用性"}},[a._v("#")]),a._v(" 1. RabbitMQ高可用性")]),a._v(" "),t("p",[a._v("RabbitMQ是比较有代表性的，因为是基于主从做高可用性的。")]),a._v(" "),t("p",[a._v("RabbitMQ 三种模式：单机模式，普通集群模式，镜像集群模式")]),a._v(" "),t("p",[t("strong",[a._v("只有镜像集群模式能够实现高可用")])]),a._v(" "),t("h2",{attrs:{id:"_1-1-单机模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-单机模式"}},[a._v("#")]),a._v(" 1.1 单机模式")]),a._v(" "),t("p",[a._v("就是demo级别的，一般就是本地启动后玩一玩，没有人生产环境中使用。")]),a._v(" "),t("h1",{attrs:{id:"_1-2-普通集群模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-普通集群模式"}},[a._v("#")]),a._v(" 1.2 普通集群模式")]),a._v(" "),t("p",[a._v("其中一个节点包含数据 其他的节点没有实际数据，被调用的时候都是向放queue的节点请求\n"),t("img",{attrs:{src:e(693),alt:"9a090b0f18389168102645528081de13.png"}}),a._v(" "),t("strong",[a._v("缺点：")])]),a._v(" "),t("ul",[t("li",[a._v("可能会在RabbitMQ中存在大量的数据传输")]),a._v(" "),t("li",[a._v("可用性没有什么保障，如果queue所在的节点宕机，就会导致queue的消息丢失")])]),a._v(" "),t("h1",{attrs:{id:"_1-3-集群镜像模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-集群镜像模式"}},[a._v("#")]),a._v(" 1.3 集群镜像模式")]),a._v(" "),t("p",[a._v("每个节点都有完整数据，如果一个节点挂了，消费者可以在其他节点消费数据\n缺点是非分布式架构，集群中每个节点都有完整数据，导致节点负载很重，只能解决吞吐量问题，不能解决负载的问题\n"),t("img",{attrs:{src:e(694),alt:"e435f695f403acc324ad6e2c68b67efc.png"}})]),a._v(" "),t("h1",{attrs:{id:"_2-kafka实现高可用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-kafka实现高可用"}},[a._v("#")]),a._v(" 2. kafka实现高可用")]),a._v(" "),t("p",[a._v("将topic数据分别为多个partition分布在了多台机器上，每个partition的数据还有多个备份，分为leader和follower，leader负责写数据和消费，follower同步数据，leader挂了，推选出新的follower\n"),t("img",{attrs:{src:e(695),alt:"5303a73d300a7a0fa8b77aae578b3f83.png"}})])])}),[],!1,null,null,null);t.default=r.exports}}]);